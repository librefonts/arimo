# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/arimo/METADATA.json /home/travis/build/fontdirectory/arimo/builds/build
$ cp -a /home/travis/build/fontdirectory/arimo/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/arimo/builds/build
$ cp -a Arimo-BoldItalic.ttf.ttx Arimo-Bold.ttf.ttx Arimo-Italic.ttf.ttx Arimo-Regular.ttf.ttx Arimo-BoldItalic.ttf._h_m_t_x.ttx Arimo-BoldItalic.ttf._p_r_e_p.ttx Arimo-BoldItalic.ttf.O_S_2f_2.ttx Arimo-BoldItalic.ttf._p_o_s_t.ttx Arimo-BoldItalic.ttf.G_P_O_S_.ttx Arimo-BoldItalic.ttf._k_e_r_n.ttx Arimo-BoldItalic.ttf._g_l_y_f.ttx Arimo-BoldItalic.ttf.V_D_M_X_.ttx Arimo-BoldItalic.ttf._g_a_s_p.ttx Arimo-BoldItalic.ttf.L_T_S_H_.ttx Arimo-BoldItalic.ttf._c_m_a_p.ttx Arimo-BoldItalic.ttf._m_a_x_p.ttx Arimo-BoldItalic.ttf.G_S_U_B_.ttx Arimo-BoldItalic.ttf.GlyphOrder.ttx Arimo-BoldItalic.ttf._h_e_a_d.ttx Arimo-BoldItalic.ttf._l_o_c_a.ttx Arimo-BoldItalic.ttf._h_d_m_x.ttx Arimo-BoldItalic.ttf._n_a_m_e.ttx Arimo-BoldItalic.ttf.G_D_E_F_.ttx Arimo-BoldItalic.ttf._f_p_g_m.ttx Arimo-BoldItalic.ttf._c_v_t.ttx Arimo-BoldItalic.ttf._h_h_e_a.ttx Arimo-Bold.ttf.O_S_2f_2.ttx Arimo-Bold.ttf._m_a_x_p.ttx Arimo-Bold.ttf.G_D_E_F_.ttx Arimo-Bold.ttf._k_e_r_n.ttx Arimo-Bold.ttf._p_r_e_p.ttx Arimo-Bold.ttf._p_o_s_t.ttx Arimo-Bold.ttf._c_v_t.ttx Arimo-Bold.ttf._h_h_e_a.ttx Arimo-Bold.ttf._h_e_a_d.ttx Arimo-Bold.ttf._h_d_m_x.ttx Arimo-Bold.ttf._f_p_g_m.ttx Arimo-Bold.ttf._g_a_s_p.ttx Arimo-Bold.ttf.L_T_S_H_.ttx Arimo-Bold.ttf.GlyphOrder.ttx Arimo-Bold.ttf.G_P_O_S_.ttx Arimo-Bold.ttf._n_a_m_e.ttx Arimo-Bold.ttf._l_o_c_a.ttx Arimo-Bold.ttf.G_S_U_B_.ttx Arimo-Bold.ttf._g_l_y_f.ttx Arimo-Bold.ttf._h_m_t_x.ttx Arimo-Bold.ttf._c_m_a_p.ttx Arimo-Bold.ttf.V_D_M_X_.ttx Arimo-Italic.ttf._h_e_a_d.ttx Arimo-Italic.ttf._g_l_y_f.ttx Arimo-Italic.ttf.G_P_O_S_.ttx Arimo-Italic.ttf._h_h_e_a.ttx Arimo-Italic.ttf._n_a_m_e.ttx Arimo-Italic.ttf._h_d_m_x.ttx Arimo-Italic.ttf._h_m_t_x.ttx Arimo-Italic.ttf._f_p_g_m.ttx Arimo-Italic.ttf._g_a_s_p.ttx Arimo-Italic.ttf._m_a_x_p.ttx Arimo-Italic.ttf._l_o_c_a.ttx Arimo-Italic.ttf._p_r_e_p.ttx Arimo-Italic.ttf.O_S_2f_2.ttx Arimo-Italic.ttf._p_o_s_t.ttx Arimo-Italic.ttf._k_e_r_n.ttx Arimo-Italic.ttf.G_D_E_F_.ttx Arimo-Italic.ttf._c_m_a_p.ttx Arimo-Italic.ttf.GlyphOrder.ttx Arimo-Italic.ttf._c_v_t.ttx Arimo-Italic.ttf.V_D_M_X_.ttx Arimo-Italic.ttf.L_T_S_H_.ttx Arimo-Italic.ttf.G_S_U_B_.ttx Arimo-Regular.ttf.G_P_O_S_.ttx Arimo-Regular.ttf.G_S_U_B_.ttx Arimo-Regular.ttf._m_a_x_p.ttx Arimo-Regular.ttf._g_l_y_f.ttx Arimo-Regular.ttf._h_e_a_d.ttx Arimo-Regular.ttf.G_D_E_F_.ttx Arimo-Regular.ttf.V_D_M_X_.ttx Arimo-Regular.ttf.GlyphOrder.ttx Arimo-Regular.ttf._p_r_e_p.ttx Arimo-Regular.ttf._p_o_s_t.ttx Arimo-Regular.ttf._h_m_t_x.ttx Arimo-Regular.ttf._h_d_m_x.ttx Arimo-Regular.ttf._n_a_m_e.ttx Arimo-Regular.ttf._g_a_s_p.ttx Arimo-Regular.ttf._l_o_c_a.ttx Arimo-Regular.ttf._c_m_a_p.ttx Arimo-Regular.ttf._k_e_r_n.ttx Arimo-Regular.ttf.L_T_S_H_.ttx Arimo-Regular.ttf._h_h_e_a.ttx Arimo-Regular.ttf._c_v_t.ttx Arimo-Regular.ttf.O_S_2f_2.ttx Arimo-Regular.ttf._f_p_g_m.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ fontbakery-check.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Bold.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Italic.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Regular.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
$ fontbakery-check.py upstream-ttx Arimo-BoldItalic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-BoldItalic.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-BoldItalic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Arimo-Bold.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Bold.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Arimo-Italic.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Italic.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Italic.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
$ fontbakery-check.py upstream-ttx Arimo-Regular.ttf.ttx
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Regular.ttf.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/arimo/builds/build /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Regular.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Italic.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-BoldItalic.ttx /home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Bold.ttx
Compiling "/home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Regular.ttx" to "/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Italic.ttx" to "/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-BoldItalic.ttx" to "/home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/arimo/builds/build/sources/Arimo-Bold.ttx" to "/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'LTSH' table...
Parsing 'VDMX' table...
Parsing 'hdmx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'kern' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GDEF' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
### Test Arimo-Regular.ttf
$ fontbakery-check.py result Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named macron is mapped to U+02C9.
But its name indicates it should be mapped to U+00AF.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): FAIL
$ fontbakery-fix-vertical-metrics.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ fontbakery-fix-vertical-metrics.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
Parameter              Arimo-BoldItalic.ttf    Arimo-Regular.ttf    Arimo-Italic.ttf    Arimo-Bold.ttf    
ymax                   2109                    2007                 2077                2116              
hhea.ascent            2116                    2116                 2116                2116              
OS/2.sTypoAscender     2116                    2116                 2116                2116              
OS/2.usWinAscent       2116                    2116                 2116                2116              
ymin                   -771                    -621                 -621                -771              
hhea.descent           -771                    -771                 -771                -771              
OS/2.sTypoDescender    -771                    -771                 -771                -771              
OS/2.usWinDescent      771                     771                  771                 771               
hhea.lineGap           0                       0                    0                   0                 
OS/2.sTypoLineGap      0                       0                    0                   0                 
hhea total             2887                    2887                 2887                2887              
typo total             2887                    2887                 2887                2887              
win total              2887                    2887                 2887                2887              
UPM:Heights            2048:2880               2048:2628            2048:2698           2048:2887         
UPM:Heights %          140 %                   128 %                131 %               140 %             


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Arimo-Regular.ttf
$ ls -l 'Arimo-Regular.ttf'* # look at the size savings of that subset process
Arimo-Regular.ttf.opt: 397900 bytes
Arimo-Regular.ttf: 432840 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf.opt /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
### Autohint TTFs (ttfautohint) Arimo-Regular.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf '/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf: 397900 bytes
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.autohint.ttf: 296196 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.autohint.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
### Subset TTFs (pyftsubset) Arimo-Regular.ttf
$ pyftsubset Arimo-Regular.latin
$ pyftsubset Arimo-Regular.menu
strippedname:/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Regular.ttf
spaceWidth is    569
nbspWidth is     569
Nothing to do
### Test Arimo-Italic.ttf
$ fontbakery-check.py result Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named macron is mapped to U+02C9.
But its name indicates it should be mapped to U+00AF.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Arimo-Italic.ttf
$ ls -l 'Arimo-Italic.ttf'* # look at the size savings of that subset process
Arimo-Italic.ttf.opt: 402760 bytes
Arimo-Italic.ttf: 437204 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf.opt /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
### Autohint TTFs (ttfautohint) Arimo-Italic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf '/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf: 402760 bytes
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.autohint.ttf: 304072 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.autohint.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
### Subset TTFs (pyftsubset) Arimo-Italic.ttf
$ pyftsubset Arimo-Italic.latin
$ pyftsubset Arimo-Italic.menu
strippedname:/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Italic.ttf
spaceWidth is    569
nbspWidth is     569
Nothing to do
### Test Arimo-BoldItalic.ttf
$ fontbakery-check.py result Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named macron is mapped to U+02C9.
But its name indicates it should be mapped to U+00AF.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Arimo-BoldItalic.ttf
$ ls -l 'Arimo-BoldItalic.ttf'* # look at the size savings of that subset process
Arimo-BoldItalic.ttf.opt: 397548 bytes
Arimo-BoldItalic.ttf: 431772 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf.opt /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
### Autohint TTFs (ttfautohint) Arimo-BoldItalic.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf '/home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf: 397548 bytes
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.autohint.ttf: 305496 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.autohint.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
### Subset TTFs (pyftsubset) Arimo-BoldItalic.ttf
$ pyftsubset Arimo-BoldItalic.latin
$ pyftsubset Arimo-BoldItalic.menu
strippedname:/home/travis/build/fontdirectory/arimo/builds/build/Arimo-BoldItalic.ttf
spaceWidth is    569
nbspWidth is     569
Nothing to do
### Test Arimo-Bold.ttf
$ fontbakery-check.py result Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
The following table(s) in the font have been ignored by FontForge
  Ignoring 'LTSH' linear threshold table
  Ignoring 'VDMX' vertical device metrics table
  Ignoring 'hdmx' horizontal device metrics table
This font contains both a 'kern' table and a 'GPOS' table.
  The 'kern' table will only be read if there is no 'kern' feature in 'GPOS'.
The glyph named periodcentered is mapped to U+2219.
But its name indicates it should be mapped to U+00B7.
The glyph named macron is mapped to U+02C9.
But its name indicates it should be mapped to U+00AF.
The glyph named Delta is mapped to U+0394.
But its name indicates it should be mapped to U+2206.
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
The glyph named mu is mapped to U+03BC.
But its name indicates it should be mapped to U+00B5.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ fontbakery-fix-opentype-names.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ fontbakery-fix-fstype.py --autofix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
$ fontbakery-fix-nbsp.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ fontbakery-fix-gasp.py --set=15 /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ fontbakery-fix-dsig.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): FAIL
$ fontbakery-fix-ascii-fontmetadata.py /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.fix /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
### Optimize TTF Arimo-Bold.ttf
$ ls -l 'Arimo-Bold.ttf'* # look at the size savings of that subset process
Arimo-Bold.ttf.opt: 400616 bytes
Arimo-Bold.ttf: 435368 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf.opt /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
### Autohint TTFs (ttfautohint) Arimo-Bold.ttf
$ ttfautohint -l 7 -r 28 -G 50 -x 13 -w "G" /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf '/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.autohint.ttf'

$ ls -l /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf: 400616 bytes
/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.autohint.ttf: 295924 bytes
$ mv /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.autohint.ttf /home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
### Subset TTFs (pyftsubset) Arimo-Bold.ttf
$ pyftsubset Arimo-Bold.latin
$ pyftsubset Arimo-Bold.menu
strippedname:/home/travis/build/fontdirectory/arimo/builds/build/Arimo-Bold.ttf
spaceWidth is    569
nbspWidth is     569
Nothing to do
### (5 of 6) Generate METADATA.json (fontbakery-build-metadata.py)
$ fontbakery-build-metadata.py /home/travis/build/fontdirectory/arimo/builds/build
{} exists
Designer's name from font is: Steve Matteson
Original size: 296196\nGzip size: 161784
Family Name: Arimo
PS Name: Arimo-BoldItalic
Full Name: Arimo Bold Italic
Style: italic
Weight: 700
Filename: Arimo-BoldItalic.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Arimo
PS Name: Arimo
Full Name: Arimo
Style: normal
Weight: 400
Filename: Arimo-Regular.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Arimo
PS Name: Arimo-Italic
Full Name: Arimo Italic
Style: italic
Weight: 400
Filename: Arimo-Italic.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
Family Name: Arimo
PS Name: Arimo-Bold
Full Name: Arimo Bold
Style: normal
Weight: 700
Filename: Arimo-Bold.ttf
Copyright: Digitized data copyright (c) 2010-2012 Google Corporation.
### (6 of 6) Run tests for METADATA.json
$ fontbakery-check.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_cyrillic(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_cyrillic_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_greek(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_greek_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): OK
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_vietnamese(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.TestFontOnDiskFamilyEqualToMetadataJSON.test_font_on_disk_family_equal_in_metadata_json(): OK
bakery_lint.tests.downstream.test_metadata_agreements.TestPostScriptNameInMetadataEqualFontOnDisk.test_postscriptname_in_metadata_equal_to_font_on_disk(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postscriptname(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): FAIL
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
{
  "name": "Arimo", 
  "designer": "Steve Matteson", 
  "license": "Apache2", 
  "visibility": "External", 
  "category": "Sans Serif", 
  "size": 237441, 
  "fonts": [
    {
      "name": "Arimo", 
      "postScriptName": "Arimo-BoldItalic", 
      "fullName": "Arimo Bold Italic", 
      "style": "italic", 
      "weight": 700, 
      "filename": "Arimo-BoldItalic.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Arimo", 
      "postScriptName": "Arimo", 
      "fullName": "Arimo", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Arimo-Regular.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Arimo", 
      "postScriptName": "Arimo-Italic", 
      "fullName": "Arimo Italic", 
      "style": "italic", 
      "weight": 400, 
      "filename": "Arimo-Italic.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }, 
    {
      "name": "Arimo", 
      "postScriptName": "Arimo-Bold", 
      "fullName": "Arimo Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "Arimo-Bold.ttf", 
      "copyright": "Digitized data copyright (c) 2010-2012 Google Corporation."
    }
  ], 
  "subsets": [
    "latin", 
    "menu"
  ], 
  "dateAdded": "2010-11-18"
}
